{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/SiriusFM/AppSecond/client/src/App.js\";\nimport { Component } from \"react\";\nimport './App.css';\nimport FileDownload from 'js-file-download';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      complexity: null,\n      scrutiny: null,\n      meanGrid: null,\n      resultingImage: null,\n      loading: false,\n      filesArray: [],\n      answersStorage: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClickDownload = this.handleClickDownload.bind(this);\n    this.handleServer = this.handleServer.bind(this);\n    this.socket = null;\n  }\n\n  componentWillMount() {\n    this.socket = io('http://localhost:9000');\n  }\n\n  handleServer(event) {\n    var names = [];\n\n    for (let i = 0; i < this.state.filesArray.length; i++) {\n      names.push(this.state.filesArray[i]['name']);\n    }\n\n    this.socket.emit('sending tables', {\n      files: this.state.filesArray,\n      names: names\n    });\n    this.socket.on('response', message => {\n      console.log(message);\n    });\n    this.socket.on(\"Otvet\", masfile => {\n      this.setState({\n        answersStorage: masfile['files']\n      });\n    });\n    event.preventDefault();\n  }\n\n  handleClickDownload(event, idx) {\n    const blob = new Blob([this.state.answersStorage[idx]], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    });\n    FileDownload(blob, 'response.xlsx');\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n    var mas = [this.state.complexity, this.state.scrutiny, this.state.meanGrid];\n    this.socket.emit(\"sending oil\", {\n      'names_of_files': mas\n    });\n    this.setState({\n      loading: true\n    });\n    this.socket.on('Otvet oil', kartinka => {\n      this.setState({\n        loading: false,\n        resultingImage: kartinka\n      });\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.resultingImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${this.state.resultingImage}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this) : this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Please load wells complexity, scrutiny and mean grid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"uploader\",\n        encType: \"multipart/form-data\",\n        onSubmit: this.handleServer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          multiple: true,\n          onChange: e => this.setState({\n            filesArray: e.target.files\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.answersStorage.length != 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => this.handleClickDownload(event, 0),\n            children: \"Download first\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => this.handleClickDownload(event, 1),\n            children: \"Download second\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Complexity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => this.setState({\n              complexity: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Scrutiny:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => this.setState({\n              scrutiny: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Mean grid:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => this.setState({\n              meanGrid: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aleksandra/Documents/SiriusFM/AppSecond/client/src/App.js"],"names":["Component","FileDownload","io","App","constructor","props","state","complexity","scrutiny","meanGrid","resultingImage","loading","filesArray","answersStorage","handleSubmit","bind","handleClickDownload","handleServer","socket","componentWillMount","event","names","i","length","push","emit","files","on","message","console","log","masfile","setState","preventDefault","idx","blob","Blob","type","mas","kartinka","render","e","target"],"mappings":"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","sourcesContent":["import { Component } from \"react\"\nimport './App.css';\nimport FileDownload from 'js-file-download';\nimport io from 'socket.io-client';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      complexity: null,\n      scrutiny: null,\n      meanGrid: null,\n      resultingImage: null,\n      loading: false,\n      filesArray: [],\n      answersStorage: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClickDownload = this.handleClickDownload.bind(this);\n    this.handleServer = this.handleServer.bind(this);\n    this.socket = null;\n  }\n\n  componentWillMount() {\n    this.socket = io('http://localhost:9000');\n  }\n\n  handleServer(event) {\n    var names = [];\n    for (let i = 0; i < this.state.filesArray.length; i++) {\n      names.push(this.state.filesArray[i]['name']);\n    }\n    this.socket.emit('sending tables', {\n      files: this.state.filesArray,\n      names: names\n    });\n    this.socket.on('response', (message) => {\n      console.log(message);\n    })\n    this.socket.on(\"Otvet\", (masfile)=>{\n      this.setState({\n        answersStorage: masfile['files']\n      });\n    })\n    event.preventDefault();\n  }\n\n  handleClickDownload(event, idx) {\n    const blob = new Blob([this.state.answersStorage[idx]], {\n      type:\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    })\n    FileDownload(blob, 'response.xlsx');\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n    var mas=[this.state.complexity, this.state.scrutiny, this.state.meanGrid];\n    this.socket.emit(\"sending oil\", {'names_of_files':mas});\n    this.setState({\n      loading: true\n    });\n    this.socket.on('Otvet oil', (kartinka) => {\n      this.setState({\n        loading: false,\n        resultingImage: kartinka\n      });\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <div>\n        {this.state.resultingImage\n        ?\n        <img src={`data:image/png;base64,${this.state.resultingImage}`} />\n        :\n        this.state.loading\n        ?\n        <div><h1>Loading...</h1></div>\n        :\n        <div><h1>Please load wells complexity, scrutiny and mean grid</h1></div>\n        }\n      </div>\n      <form\n        className=\"uploader\"\n        encType=\"multipart/form-data\"\n        onSubmit={this.handleServer}\n      >\n        <input type=\"file\" id=\"file\" multiple onChange={(e) => this.setState({\n          filesArray: e.target.files\n        })} />\n        <input type=\"submit\" value=\"Submit\"></input>\n      </form>\n      <div>\n        {this.state.answersStorage.length != 0\n        ?\n        <div>\n        <button onClick={(event) => this.handleClickDownload(event, 0)}>Download first</button>\n        <button onClick={(event) => this.handleClickDownload(event, 1)}>Download second</button>\n        </div>\n        :\n        <div></div>}\n      </div>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Complexity:\n          <input type=\"file\" onChange={(e) => this.setState({\n            complexity: e.target.files[0]\n          })} />\n        </label>\n        <br></br>\n        <label>\n          Scrutiny:\n          <input type=\"file\" onChange={(e) => this.setState({\n            scrutiny: e.target.files[0]\n          })} />\n        </label>\n        <br></br>\n        <label>\n          Mean grid:\n          <input type=\"file\" onChange={(e) => this.setState({\n            meanGrid: e.target.files[0]\n          })} />\n        </label>\n        <br></br>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}