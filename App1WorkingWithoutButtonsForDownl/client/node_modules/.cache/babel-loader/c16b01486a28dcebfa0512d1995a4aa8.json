{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/SiriusFM/GazpromNeft/AppFirstVariantNotHeroku/project/App1WorkingButWithoutButtonsDownload/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport xlsx from 'node-xlsx';\nimport './App.css';\nimport FileDownload from 'js-file-download';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      complexity: null,\n      scrutiny: null,\n      meanGrid: null,\n      resultingImage: null,\n      loading: false,\n      filesArray: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmitAnother = this.handleSubmitAnother.bind(this);\n  }\n\n  handleSubmitAnother(event) {\n    const data = new FormData();\n\n    for (let i = 0; i < this.state.filesArray.length; i++) {\n      data.append('file', this.state.filesArray[i]);\n    }\n\n    axios.post('http://localhost:9000/multiple', data).then(res => {\n      for (let i = 0; i < 1; i++) {\n        //for (let i = 0; i < res.data.length; i++) {\n        var buffer = xlsx.build([res.data[i][0]]);\n        const blob = new Blob([buffer], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        FileDownload(blob, `response${i + 1}.xlsx`);\n      }\n    });\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n    const data = new FormData();\n    data.append('file', this.state.complexity);\n    data.append('file', this.state.scrutiny);\n    data.append('file', this.state.meanGrid);\n    this.setState({\n      loading: true\n    });\n    axios.post(\"http://localhost:9000/neft\", data).then(res => {\n      this.setState({\n        loading: false,\n        resultingImage: res.data\n      });\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.resultingImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${this.state.resultingImage}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this) : this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Please load wells complexity, scrutiny and mean grid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"uploader\",\n        encType: \"multipart/form-data\",\n        onSubmit: this.handleSubmitAnother,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          multiple: true,\n          onChange: e => this.setState({\n            filesArray: e.target.files\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Complexity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => this.setState({\n              complexity: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Scrutiny:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => this.setState({\n              scrutiny: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Mean grid:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => this.setState({\n              meanGrid: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aleksandra/Documents/SiriusFM/GazpromNeft/AppFirstVariantNotHeroku/project/App1WorkingButWithoutButtonsDownload/client/src/App.js"],"names":["React","Component","axios","xlsx","FileDownload","App","constructor","props","state","complexity","scrutiny","meanGrid","resultingImage","loading","filesArray","handleSubmit","bind","handleSubmitAnother","event","data","FormData","i","length","append","post","then","res","buffer","build","blob","Blob","type","preventDefault","setState","render","e","target","files"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport axios from 'axios';\nimport xlsx from 'node-xlsx';\nimport './App.css';\nimport FileDownload from 'js-file-download';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      complexity: null,\n      scrutiny: null,\n      meanGrid: null,\n      resultingImage: null,\n      loading: false,\n      filesArray: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmitAnother = this.handleSubmitAnother.bind(this);\n  }\n\n  handleSubmitAnother(event) {\n    const data = new FormData()\n    for (let i = 0; i < this.state.filesArray.length; i++) {\n      data.append('file', this.state.filesArray[i]);\n    }\n    axios.post('http://localhost:9000/multiple', data)\n      .then(res => {\n          for (let i = 0; i < 1; i++) {\n        //for (let i = 0; i < res.data.length; i++) {\n          var buffer = xlsx.build([res.data[i][0]]);\n          const blob = new Blob([buffer], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n          })\n          FileDownload(blob, `response${i+1}.xlsx`);\n        }\n      })\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n    const data = new FormData();\n    data.append('file', this.state.complexity);\n    data.append('file', this.state.scrutiny);\n    data.append('file', this.state.meanGrid);\n    this.setState({\n      loading: true\n    })\n    axios.post(\"http://localhost:9000/neft\", data)\n      .then(res => {\n        this.setState({\n          loading: false,\n          resultingImage: res.data\n        });\n      })\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <div>\n        {this.state.resultingImage\n        ?\n        <img src={`data:image/png;base64,${this.state.resultingImage}`} />\n        :\n        this.state.loading\n        ?\n        <div><h1>Loading...</h1></div>\n        :\n        <div><h1>Please load wells complexity, scrutiny and mean grid</h1></div>\n        }\n      </div>\n      <form\n        className=\"uploader\"\n        encType=\"multipart/form-data\"\n        onSubmit={this.handleSubmitAnother}\n      >\n        <input type=\"file\" id=\"file\" multiple onChange={(e) => this.setState({\n          filesArray: e.target.files\n        })} />\n        <input type=\"submit\" value=\"Submit\"></input>\n      </form>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Complexity:\n          <input type=\"file\" onChange={(e) => this.setState({\n            complexity: e.target.files[0]\n          })} />\n        </label>\n        <br></br>\n        <label>\n          Scrutiny:\n          <input type=\"file\" onChange={(e) => this.setState({\n            scrutiny: e.target.files[0]\n          })} />\n        </label>\n        <br></br>\n        <label>\n          Mean grid:\n          <input type=\"file\" onChange={(e) => this.setState({\n            meanGrid: e.target.files[0]\n          })} />\n        </label>\n        <br></br>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}